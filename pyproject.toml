[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "black>=23.1.0",
    "isort>=5.12.0",
    "mypy>=1.0.1",
    "anyio>=3.6.2",
    "trio>=0.22.0",
    "pytest>=7.2.1",
    "coverage[toml]>=7.1.0",
    "strawberry-graphql>=0.156.4",
    "fastapi>=0.92.0",
    "ruff>=0.0.247",
]

[project]
name = "aioinject"
version = "0.4.1"
description = ""
authors = [
    {name = "Doctor", email = "thirvondukr@gmail.com"},
]
dependencies = []
requires-python = ">=3.10"
readme = "readme.md"
license = {text = "MIT"}

[build-system]
requires = ["pdm-pep517>=1.0"]
build-backend = "pdm.pep517.api"


[tool.coverage.run]
source = ["aioinject"]
command_line = "-m pytest"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_covered = true
skip_empty = true
precision = 2

[tool.black]
line_length = 79

[tool.isort]
profile = "black"
line_length = 79


[tool.ruff]
target-version = "py310"
src = ["aioinject", "tests"]
select = ["ALL"]
ignore = [
    "D", # pydocstyle
    "PD",  # pandas-vet
    "I",  # Isort
    "INP",
    "E501",
    "ANN101",
    "ANN102",
    "ANN401",
    "TCH001",
    "TCH002",
    "TCH003",
    "EXE",
    "RUF001",
    "RUF002",
    "RUF003",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.mccabe]
max-complexity = 6

[tool.ruff.flake8-bugbear]
extend-immutable-calls = []

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod"]
staticmethod-decorators = ["staticmethod"]


[tool.pdm.scripts]
lint = {composite = [
    "black .",
    "isort .",
#    "ruff .",
    "mypy .",
]}
test = {composite = [
    "coverage run",
    "coverage report",
]}
