[project]
name = "aioinject"
version = "0.11.3"
description = "Async dependency injection library"
requires-python = ">=3.10"
authors = [
    { name = "Doctor", email = "thirvondukr@gmail.com" },
    { name = "dexofan", email = "fadeddexofan@gmail.com" },
]
dependencies = [
    "typing-extensions>=4.0.0",
]
readme = "README.md"
license = { text = "MIT" }
classifiers = [
    "License :: OSI Approved :: MIT License",
]

[project.urls]
"Repository" = "https://gitlab.com/ThirVondukr/aioinject"

[build-system]
requires = ["pdm-pep517>=1.0"]
build-backend = "pdm.pep517.api"


[tool.commitizen]
name = "cz_conventional_commits"
version = "0.11.3"
version_files = [
    "aioinject/__init__.py",
    "pyproject.toml:version"
]


[tool.black]
line_length = 79


[tool.ruff]
target-version = "py310"
src = ["aioinject", "tests"]
select = ["ALL"]
unfixable = [
    "B", # Avoid trying to fix flake8-bugbear violations.
    "ERA", # Avoid deleting commented-out code
]
ignore = [
    "D",
    "PD", # pandas-vet
    "E501",
    "ANN101",
    "ANN102",
    "ANN401",
    "TCH001",
    "TCH002",
    "TCH003",
    "EXE",
]

line-length = 79

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.mccabe]
max-complexity = 6

[tool.ruff.isort]
lines-after-imports = 2

[tool.ruff.flake8-bugbear]
extend-immutable-calls = []

[tool.ruff.flake8-quotes]
inline-quotes = "double"

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod"]
staticmethod-decorators = ["staticmethod"]


[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_untyped_decorators = true
disallow_any_explicit = false
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = true
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true
follow_imports = "normal"
pretty = true
show_error_codes = true
show_column_numbers = true


[tool.pyright]
include = ["aioinject"]
typeCheckingMode = "strict"


[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "black>=23.1.0",
    "mypy>=1.0.1",
    "anyio>=3.6.2",
    "trio>=0.22.0",
    "pytest>=7.2.1",
    "pytest-cov>=4.1.0",
    "coverage[toml]>=7.1.0",
    "strawberry-graphql>=0.156.4",
    "fastapi>=0.92.0",
    "ruff>=0.0.247",
    "commitizen>=2.42.1",
    "litestar>=2.0.0rc1",
    "uvicorn>=0.23.2",
    "asgi-lifespan>=2.1.0",
]

[tool.pdm.scripts]
lint = { composite = [
    "mypy .",
    "ruff check .",
    "black --check .",
] }
fmt = { composite = [
    "ruff check --fix --exit-zero .",
    "black ."
] }
test = { composite = [
    "pytest --cov-report term-missing --cov=aioinject"
] }
